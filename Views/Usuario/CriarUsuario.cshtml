@using CadastroDeContatos.Enums
@{
	ViewData["Title"] = "Criar Novo Usuário";
}
@model UsuarioModel

<div class="text-center">
	<br />
	<h1 class="display-4">Criar Novo Usuário</h1>
	<div class="text-success">
		<hr>
	</div>
	
</div>

<form asp-controller="Usuario" asp-action="CriarUsuario" method="post">

		<div class="mb-3">
			<label for="nome">Nome</label>
			<input type="text" asp-for="Nome" class="form-control" placeholder="Digite o nome do usuário...">
			@Html.ValidationMessageFor(x => x.Nome)
		</div>
		<div class="mb-3">
			<label for="login">Login</label>
			<input type="text" asp-for="Login" class="form-control"  id="login" placeholder="Digite o Login do usuário...">
			@Html.ValidationMessageFor(x => x.Login)
		</div>
		<div class="mb-3">
			<label for="email">Email</label>
			<input type="email" asp-for="Email" class="form-control" placeholder="Digite o Email do usuário...">
			@Html.ValidationMessageFor(x => x.Email)
		</div>

		<div class="mb-3">
			<label for="perfil">Perfil</label>
			<select asp-for="Perfil" class="form-control">
				<option value="">Selecione</option>
				<option value="@PerfilEnum.Administrador">Administrador</option>
				<option value="@PerfilEnum.Padrao">Padrão</option>

			</select>
			@Html.ValidationMessageFor(x => x.Perfil)
		</div>

		<div class="mb-3">
			<label for="senha">Senha</label>
			<input type="password" asp-for="Senha" class="form-control" placeholder="Digite a senha do usuário...">
			@Html.ValidationMessageFor(x => x.Senha)
		</div>

		<button type="submit" class="btn btn-primary btn-outline-light">Cadastrar</button>

		<a class="btn btn-secondary" asp-controller="Usuario" asp-action="Index" role="button">Voltar</a>

	</form>